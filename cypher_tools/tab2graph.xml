<tool id="tab2graph" name="Tab-to-Graph" version="0.2">
  <description>Converter</description>
  <command interpreter="python">
    tab2graph.py $input_file $h $output_file_n $output_file_r '$def_n' '$def_r'
  </command>
  <inputs>
    <param name="input_file" type="data" format="tabular" label="Input File (tabular)"/>
    <param name="h" label="Check to neglect the first row of the input." type="boolean" truevalue="1" falsevalue="0" checked="False"/>
    <param name="def_n" type="text" area="true" size="10x70" label="Definition for Nodes">
      <sanitizer>
        <valid initial="string.printable">
         <remove value="&apos;"/>
        </valid>
        <mapping initial="none">
          <add source="&apos;" target="__sq__"/>
        </mapping>
      </sanitizer>
    </param>
    <param name="def_r" type="text" area="true" size="10x70" label="Definition for Relations">
      <sanitizer>
        <valid initial="string.printable">
         <remove value="&apos;"/>
        </valid>
        <mapping initial="none">
          <add source="&apos;" target="__sq__"/>
        </mapping>
      </sanitizer>
    </param>
  </inputs>
  <outputs>
    <data name="output_file_n" format="tabular" label="${tool.name} on ${on_string} (node)"/>
    <data name="output_file_r" format="tabular" label="${tool.name} on ${on_string} (relation)"/>
  </outputs>
  <help>
**What it does**
Example:
[{"column":"1","type":"tf","properties":[]},{"column":"3","type":"gene","properties":[]}]
[{"source":"1","target":"3","type":"regulates","properties":[]}]
  </help>
</tool>
